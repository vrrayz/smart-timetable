// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  password        String
  courses         Course[]
  terms           Term[]
  role            String           @default("member") //admin and member
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  studyPreference StudyPreference?
}

model Course {
  id         Int       @id @default(autoincrement())
  title      String
  courseCode String?
  User       User?     @relation(fields: [userId], references: [id])
  userId     Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model Term {
  id        Int       @id @default(autoincrement())
  title     String
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  startDate DateTime
  endDate   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model StudyPreference {
  id            Int    @id @default(autoincrement())
  User          User   @relation(fields: [userId], references: [id])
  userId        Int    @unique
  startTime     Int //in milliseconds
  endTime       Int //in milliseconds
  coursesPerDay Int
  breaksPerDay  Int //in milliseconds
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
